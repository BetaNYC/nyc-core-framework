/*

In this file:

// A. Variables
// B. Grid Configuration
// C. gap
// C. Colums
// D. Column Classes

*/

//////////////////////////////////////////////
// A. Variables
//////////////////////////////////////////////

$columns: 12;

//////////////////////////////////////////////
// B. Grid Configuration
//////////////////////////////////////////////

.grid {
    position: relative;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    min-width: 100%;
}

[class*="grid__col"]{
    flex: 0 0 100%;
    max-width: 100%;
}

//////////////////////////////////////////////
// B. Grid gap
//////////////////////////////////////////////

[class*="grid--gap"] {
    --gap-size: var(0);

    margin-top: calc(-1 * var(--gap-size));
    margin-right: calc(-0.5 * var(--gap-size));
    margin-left: calc(-0.5 * var(--gap-size));

    > [class*="grid__col"] {
        margin-top: var(--gap-size);
        padding-left: calc(0.5 * var(--gap-size));
        padding-right: calc(0.5 * var(--gap-size));
    }
}

@each $key, $value in $spacers {
    .grid--gap-#{$key} {
        --gap-size: #{$value};
    }
}

.grid--gap-border {
    --gap-size: var(--default-border-width);
}

//////////////////////////////////////////////
// C. Create Grid Classes
//////////////////////////////////////////////

@each $breakpoint in map-keys($breakpoints) {
    @include breakpoint-up($breakpoint) {
        $mod: breakpoint-modifier($breakpoint, $breakpoints);

        .grid--cols#{$mod} > [class*="grid__col"] {
            flex: 1;
            width: auto;
        }
        
        @for $i from 1 through $columns {
            .grid--cols-#{$i}#{$mod} > [class*="grid__col"] {
                flex: 0 0 100% / $columns * $i;
                max-width: 100% / $columns * $i;
            }
        }

        .grid--cols-auto#{$mod} > [class*="grid__col"]{
                flex: none;
                // width: auto;
        }

        @for $i from 1 through $columns {
            .order-#{$i}#{$mod} {
                order: $i;
            }
        }
    }
}

//////////////////////////////////////////////
// D. Create Column Classes
//////////////////////////////////////////////

@each $breakpoint in map-keys($breakpoints) {
    @include breakpoint-up($breakpoint) {
        $mod: breakpoint-modifier($breakpoint, $breakpoints);

        @for $i from 1 through $columns {
            .grid > .grid__col-#{$i}#{$mod} {
                flex: 0 0 100% / $columns * $i;
                max-width: 100% / $columns * $i;
            }
        }

        .grid > .grid__col-auto#{$mod} {
            flex: none;
            width: auto;
        }
    }
}


//////////////////////////////////////////////
// E. Create Column Classes
//////////////////////////////////////////////

.css-grid-layout {
    --col-1-w: 1fr;
    --col-2-w: 3fr;
    --col-3-w: 1fr;

    display: grid;
    background-color: rgba(yellow, 0.25);

    > * {
        border:2px solid blue !important;
        padding: var(--s2);
    }
    
    grid-template-columns: 
        var(--col-1-w) 
        var(--col-2-w) 
        var(--col-3-w);
    
    grid-template-areas: 
        "header header header"
        "sidebar-01 main sidebar-02"
        "footer footer footer";
}

.header{
    grid-area: header;
}

.sidebar-01{
    grid-area: sidebar-01;
}

.sidebar-02{
    grid-area: sidebar-02;
}

.main{
    grid-area: main;
}

.footer{
    grid-area: footer;
}