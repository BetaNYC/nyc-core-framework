/*

In this file:

// A. Variables
// B. Table Class
// C. Right to Left

*/

//////////////////////////////////////////////
// A. Variables
//////////////////////////////////////////////

:root{

    --table-cell-padding-x: 1.5em;
    --table-cell-padding-y: 0.75em;

}

//////////////////////////////////////////////
// B. Table Class
//////////////////////////////////////////////

.table {
    width: 100%;

    th, 
    td{
        padding: var(--table-cell-padding-y) var(--table-cell-padding-x);
        vertical-align: top;
        text-align: inherit;
    }

    td{
        border-top-width: var(--default-border-width);
        border-top-style: var(--default-border-style);
    }

    thead th {
        vertical-align: bottom;

        &:not([class*="w-"]) {
            width: auto;
        }

        &.w-fit{
            width: 2%;
            white-space: nowrap;
        }
    } 
    
    thead tr {
        border-top-style: unset;
    }
}

.table-scroll {
    position: relative;

    caption{
        // text-align: left;
    }

    .table-scroll__container{
        overflow-x: auto;
        max-width: 100%;

        &::before, 
        &::after{
            display: none; //////////
        }

        &::before{
            content: "";
            position: absolute;
            right: 0;
            top: 0;
            bottom: 0;
            width: 50%;
            z-index: 12000;
            background: linear-gradient(to right,rgba(255, 255, 255, 0), rgb(255, 255, 255) 100%);
            pointer-events: none;

        }

        &::after{
            font-size: var(--font-size-sm);
            content: "Scroll right to view full table";
            opacity: 0.75;
        }

    }

    table{
        min-width: 800px;
    }
}

@each $breakpoint in map-keys($breakpoints) {
    @include breakpoint-down($breakpoint) {
        $mod: breakpoint-modifier($breakpoint, $breakpoints);
        
        .table--stack#{$mod} {

            &.table--edge{
                td{
                    padding-left: 0;
                    padding-right: 0;
                }
            }

            &.table--divider{
                border-collapse: collapse;
            }
            
            thead {
                position: absolute;
                top: -9999px;
                left: -9999px;
            }

            tr:not(:first-child){
                border-top-width: calc(var(--default-border-width) * 2);
                border-top-style: var(--default-border-style);
            }

            td {

                &:first-child{
                    border: unset;
                }
                
                display: flex;
                flex-direction: row-reverse;
                justify-content: space-between;
            }

            td::after {
                content: attr(data-before);
                font-weight: bold;
                margin-right: 1rem;
            }
        }
    }
}









.table--divider{
    border-collapse: separate;
    
    th,
    td {

        &:not(:first-child){
            border-left-width: var(--default-border-width);
            border-left-style: var(--default-border-style);
        }
    }
}

.table--striped {
    tbody tr:nth-of-type(odd) td {
        @extend .subtle-fill;
        --subtle-fill-opacity: 0.0375;
    }
}

.table--va-middle{
    td{
        vertical-align: middle;
    }
}

[dir="ltr"] .table--edge {
    th,
    td {
        &:first-child {
            padding-left: 0;
        }
        &:last-child {
            padding-right: 0;
        }
    }
}

//////////////////////////////////////////////
// C. Right to Left
//////////////////////////////////////////////

[dir="rtl"] .table--edge{
    th,
    td {
        &:first-child {
            padding-right: 0;
        }
        &:last-child {
            padding-left: 0;
        }
    }
}