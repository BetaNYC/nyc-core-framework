/*

In this file:

// A. Screen Reader Only
// B. Accessible Hover Focus

*/

//////////////////////////////////////////////
// A. Screen Reader Only
//////////////////////////////////////////////

// Only display content to screen readers

.sr-only {
    // sg - ive had trouble w/ font awesome ( and probably other modules / imports ) would be similar,
    // everyone uses 'sr-only' so we wind up w/ competing styles. might want to rename
    overflow: hidden;
    position: absolute;
    width: 1px;
    height: 1px;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: unset;
    padding: unset;
}

// Use in conjunction with .sr-only to only display content when it's focused.
// Useful for "Skip to main content" links; see https://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1
// Credit: HTML5 Boilerplate

.sr-only-focusable {
    &:active,
    &:focus {

        // sg - if we leave this as absolutely positioned, users have to make sure there's a relative parent that 
        // will position it properly. if we set this to static, left / right to auto, z-index to auto, it should have more 
        // predictable positioning.
        // maybe im missing something here cause the rest of this seems like a lot of thought went into it.

        position: absolute;
        top: var(--s1);
        left: var(--s1);
        z-index: 10000;
        overflow: visible;
        clip: auto;
        white-space: normal;
        padding: var(--btn-padding-y) var(--btn-padding-x);
        background-color: rgba( #ffffff, 0.95);
        color: var(--dark);
        border-radius: var(--border-radius);
        box-shadow: 0 0 0.5rem currentColor;
        font-size: var(--font-size-md);
    }
}

//////////////////////////////////////////////
// B. Accessible Hover Focus
//////////////////////////////////////////////

.hover-focus {
    &:hover,
    &:focus {
        
        &:not(.sr-only-focusable):not(.expanded-link) {
            position: relative;
            // sg - element should stay where it is right? then we probably dont want to change the position, if it starts
            // absolutely positioned and it changes on hover/focus it could jump to somewhere random.
            z-index: 5000;
            // sg - why are we changing the Zindex here?
        }

        &:not([class*="-icon"]):not([aria-disabled="true"]) {
            text-decoration: underline;
            // sg - maybe we want to change this to just [disabled] ? [aria-disabled] is something aimed at screen-reader-onlys
            // while text decoration relates to keybaord / visual users
        }
    }
}