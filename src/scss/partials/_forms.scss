/*

In this file:

// A. Variables
// B. Form Entry Block
// C. Form Entry Elements
// D. Checkboxes and Radios
// D. Switches
// E. Form Feedback and Alerts

*/

//////////////////////////////////////////////
// A. Variables
//////////////////////////////////////////////

:root {
    --form-field-padding-x: 1em;
    --form-field-padding-y: 0.75em;
}

//////////////////////////////////////////////
// B. Form Entry Block
//////////////////////////////////////////////

.form-entry {
    text-align: left;
    
    select,
    textarea,
    input:not([type="radio"]):not([type="checkbox"]):not([type="file"]):not([type="range"]) {
        border: none;
        background-color: transparent;
        color: inherit;
    }

    select option {
        color: currentColor !important;
    }

    button,
    fieldset{
        border: none;
    }

    [dir="rtl"] & {
        text-align: right;
    }
}

.form-entry + .form-entry {
    margin-top: var(--s4);
    margin-bottom: var(--s4);
}

//////////////////////////////////////////////
// C. Form Entry Elements
//////////////////////////////////////////////

// Field

.form-entry__field, 
.form-entry__field--has-btn {
    --action-btn-size: 2.5rem;
    
    display: flex;
    color: inherit;
    
    @extend %subtle-fill !optional;
    --subtle-fill-opacity: 0.05;

    border-bottom-width: var(--default-border-width);
    border-bottom-style: var(--default-border-style);
    border-bottom-color: currentColor !important;
}

// Label

.form-entry__field__label {
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    right: 0;

    pointer-events: none;

    &::after{
        content: "*";
        margin: auto 0.25rem;
        display: none;
    }
}

:required ~ .form-entry__field__label::after{
    display: inline;
}

// Label and Input (Default)

.form-entry__field__label,
.form-entry__field__input {
    padding-top: var(--form-field-padding-y);
    padding-bottom: var(--form-field-padding-y);
    padding-right: var(--form-field-padding-x);
    padding-left: var(--form-field-padding-x);
    
    line-height: normal;
}

// Label and Input (Active)

.form-entry__field__input:focus, 
.form-entry__field__input:active,
.has-value .form-entry__field__input {
    padding-top: calc(var(--form-field-padding-y) * 1.5);
    padding-bottom: calc(var(--form-field-padding-y) * 0.5);
}

.form-entry__field__input:focus ~ .form-entry__field__label,
.form-entry__field__input:active ~ .form-entry__field__label,
.has-value .form-entry__field__label{
    padding-top: calc( var(--form-field-padding-y) * 0.25 );
    padding-bottom: calc( var(--form-field-padding-y) * 0.25 );

    padding-left: 0;
    padding-right: 0;

    margin-left: var(--form-field-padding-x);
    margin-right: var(--form-field-padding-x);

    transform-origin: top left;
    transform: scale(0.65);

    [dir="rtl"] & {
        transform-origin: top right;
    }
}

// Form Group within Navigation

[class*="nav"] > li > form,
.primary-nav__menu > ul > li > form {
    
    input {
        border: none !important;
    }

    .form-entry {
        --form-field-padding-y: var(--nav--divider-padding-y);
        --form-field-padding-x: var(--nav--divider-padding-x);
    }
    
    .form-entry__field__label,
    .form-entry__field__input {
        line-height: inherit !important;
    }

    .form-entry__field, 
    .form-entry__field--has-btn {
        border: none;
    }

    .form-entry__field__input:focus,
    .form-entry__field__input:active,
    .form-entry__field__input ~ .form-entry__field__label,
    .has-value .form-entry__field__input {
        padding-top: var(--form-field-padding-y);
        padding-bottom: var(--form-field-padding-y);
    }

    .form-entry__field__input ~ .form-entry__field__label{
        line-height: inherit;
        margin: unset;
        transform: unset;
    }

    .form-entry__field__input:focus ~ .form-entry__field__label, 
    .form-entry__field__input:active ~ .form-entry__field__label, 
    .has-value .form-entry__field__label{
        display: none;
    }
}

// Google Translate Dropdown

.goog-gt-tt{
    display: none !important;
}

.goog-te-gadget, 
.goog-te-combo{
    font-family: inherit !important;
    background-color: transparent !important;
}

.goog-te-gadget{
    color: inherit !important;
    font-size: var(--font-size-md) !important;
    text-align: center;
    
    > div, 
    > div > .goog-te-combo,
    > span > a {
        color: currentColor !important;
    }

    > div{
        margin-bottom: var(--s1);

        @extend %subtle-fill !optional;
        --subtle-fill-opacity: 0.05;
    }

    > div, 
    > div > .goog-te-combo{
        font-size: var(--font-size-rg) !important;
    }

    > div > .goog-te-combo {
        margin: 0 !important;
        padding: var(--form-field-padding-y) var(--form-field-padding-x);

        border-bottom-width: var(--default-border-width) !important;
        border-bottom-style: var(--default-border-style) !important;
        border-bottom-color: currentColor !important;
    }

}

// Google Translate and Field Input Wrap (Select)

.goog-te-gadget > div,
.form-entry__field__input-wrap {
    position: relative;
    width: 100%;

    @include add-caret("after");

    &::after{
        pointer-events: none;
        position: absolute;
        right: 0;
        top: 50%;
        transform: translateY(-50%);
        margin-left: var(--s2);
        margin-right: var(--s2);
    }

}

.form-entry__field__input-wrap{
    .form-entry__field__input {
        text-indent: -9999px;
    }
}

.form-entry__field__input-wrap::after {
    [dir="rtl"] & {
        right: unset;
        left: 0;
    }
}

.has-value .form-entry__field__input {
    text-indent: 0;
    font-size: 99.99%;
}

// Has Button Modifier

.form-entry__field--has-btn {

    > .form-entry__field__input {
        padding-right: calc( var(--form-field-padding-x) + var(--btn--icon-only-size) );
    }

    > .form-entry__field__btn {

        @extend .btn !optional;
        @extend .btn--icon-only !optional;
        
        position: absolute;
        top: 50%;
        right: 0;
        transform: translatey(-50%);

        margin-left: calc(var(--form-field-padding-x) * 0.5);
        margin-right: calc(var(--form-field-padding-x) * 0.5);

    }

    [dir="rtl"] & {

        > .form-entry__field__btn {
            right: unset;
            left: 0;
        }
        
        > .form-entry__field__input {
            padding-right: var(--form-field-padding-x);
            padding-left: calc( var(--form-field-padding-x) + var(--btn--icon-only-size) );
        }
    }

}


// File Input

.form-entry__field--upload {
    flex-direction: column;

    > .form-entry__field__btn, 
    > .field__uploads{
        line-height: inherit;
        padding: var(--form-field-padding-y) var(--form-field-padding-x) !important;
    }

    > .form-entry__field__btn{
        @extend .btn !optional;
        @extend .btn--has--icon !optional;

        background-color: var(--dark);
        color: var(--dark-text);
    }

    > .field__uploads{
        flex-grow: 1;
    }

}

// Field Assistance 

.form-entry__assistance {
    margin-top: 0.5rem;
    padding-left: var(--form-field-padding-x);
    padding-right: var(--form-field-padding-x);
    opacity: 0.75;
    font-size: 75%;
}


//////////////////////////////////////////////
// C. Checkboxes and Radios
//////////////////////////////////////////////

.form-entry {
    legend {
        margin-bottom: var(--s2);
    }
}

.form-entry__options{
    --gap-size: 0.5em;

    padding-left: var(--s2);

    clear: both;
    
    display: flex;
    flex-direction: column;

    label[class*="form-entry__"]:not(:last-child){
        margin-bottom: var(--gap-size);
    }
}

@each $breakpoint in map-keys($breakpoints) {
    @include breakpoints-up($breakpoint) {
        $mod: breakpoint-modifier($breakpoint, $breakpoints);
        
        .options--horizontal#{$mod} {
            flex-direction: row;

            margin-left: calc(-1 * var(--gap-size));
            margin-right: calc(-1 * var(--gap-size));

            label[class*="form-entry__"]{
                margin-bottom: unset;
                margin-left: var(--gap-size);
                margin-right: var(--gap-size);
            }

        }

    }
}


// Checkbox, Radio Shared Styles

.form-entry__options__radio,
.form-entry__options__check {
    position: relative;
    color: inherit;
    display: flex;
    align-items: baseline;
    padding-left: 1em;
    width: auto;
    cursor: pointer;

    [dir="rtl"] & {
        padding-left: unset;
        padding-right: 1em;
    }
}

.form-entry__options__radio > input[type="radio"],
.form-entry__options__check > input[type="checkbox"] {
    background-color: transparent;
    opacity: 0;
} 

//
// Make sure the label is only as wide as the
// inner text requires it to be.
//

.form-entry__options__radio > input ~ .radio__label,
.form-entry__options__check > input ~ .checkbox__label {
    line-height: var(--base-line-height);

    &::before {
        position: absolute;
        top: 0;
        left: 0;
        opacity: 0.5;

        @extend .fontAwesome !optional;
    }
}

// Unchecked

.form-entry__options__check > input ~ .checkbox__label::before{
    font-weight: 400;
    content: "\f0c8";
}

.form-entry__options__radio > input ~ .radio__label::before{
    font-weight:  400;
    content: "\f111";
}

.form-entry__options__check > input:checked ~ .checkbox__label::before{
    font-weight: 900;
    content: "\f14a";
}

.form-entry__options__radio > input:checked ~ .radio__label::before{
    font-weight: 900;
    content: "\f192";
}

//
// Defining States
//

.form-entry__options__radio > input:focus ~ .radio__label,
.form-entry__options__check > input:focus ~ .checkbox__label {
    text-decoration: underline;
    &::before{
        opacity: 0.75;
    }
}

.form-entry__options__radio > input:checked ~ .radio__label,
.form-entry__options__check > input:checked ~ .checkbox__label {
    &::before{
        opacity: 1;
    }
}

//////////////////////////////////////////////
// E. Form Feedback and Alerts
//////////////////////////////////////////////

[data-alert="form-errors"],
.form-entry__feedback {
    display: none;
}

.invalid > .form-entry__feedback{
    display: block;
}

.form-entry__feedback {
    margin-bottom: var(--s2);

    strong {
        margin-left: 0.25rem;
        margin-right: 0.25rem;
    }
}

[dir="rtl"] {
    .form-entry__options__radio > .radio__label::before,
    .form-entry__options__radio > input[type="radio"],

    .form-entry__options__check > .checkbox__label::before,
    .form-entry__options__check > .checkbox__label::after,
    .form-entry__options__check > input[type="checkbox"] {
        left: unset;
        right: 0;
    }

}

//////////////////////////////////////////////
// D. I.E. 11 Support
//////////////////////////////////////////////

@media screen and (-ms-high-contrast: active),
screen and (-ms-high-contrast: none) {

    div.goog-te-gadget {
        display: block !important;
    }
    
}
