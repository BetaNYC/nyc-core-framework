/*

In this file:

// A. Variables
// B. Tabs
// D. Nav Divider
// E. Dropdown

*/

////////////////////////////////////////
// A. Variables
////////////////////////////////////////

:root {
    --tab-padding-x: 1em;
    --tab-padding-y: 0.5em;

    --accent-bar-size: calc(var(--default-border-width) * 2);
    --accent-bar-opacity: 1;
}

////////////////////////////////////////
// B. Tabs
////////////////////////////////////////

.tabs {
    @extend %list-no-style;
    position: relative;

    > li > button {
        position: relative;
        padding: var(--tab-padding-y) var(--tab-padding-x);

        @extend .subtle-fill;
        --subtle-fill-opacity: 0.05;

        display: block;
        width: 100%;

        &::before {
            transition: none;
        }

        &::after {
            content: "";
            position: absolute;
            top: 0;
            right: 0;
            left: 0;
            height: calc( var(--default-border-width) * 2 );
            background-color: currentColor;
            opacity: 0.125;
        }
    }

    [aria-selected="true"] {
        font-weight: var(--base-font-weight-bold);

        &::after {
            opacity: 1;
        }
    }

    @each $breakpoint in map-keys($breakpoints) {
        @include breakpoint-up($breakpoint) {
            $mod: breakpoint-modifier($breakpoint, $breakpoints);

            &.tabs--horizontal#{$mod} {
                display: flex;
                flex-direction: row;
                align-items: baseline;

            }
        }
    }
}

.tabs:not([class*="tabs--span"]) {

    &::before {
        content: "";
        position: absolute;
        top: 100%;
        right: 0;
        left: 0;
        height: calc(var(--default-border-width) * 2);
        background-color: currentColor;
        opacity: 0.125;
    }

    > li > button {
        &::after,
        &::before {
            display: none;
        }

        &::after {
            top: 100%;
        }
    }

    > li > button[aria-selected="true"] {
        &::after,
        &::before {
            display: block;
        }
    }
}

.tabs--span {

    > li > button[aria-selected="true"] {
        &::before {
            display: none;
        }
        
        border-color: transparent;
    }

    > li:not(:first-child) > button[aria-selected="true"] {
        border-left-width: var(--default-border-width);
        border-left-style: var(--default-border-style);
    }

    > li:not(:last-child) > button[aria-selected="true"] {
        border-right-width: var(--default-border-width);
        border-right-style: var(--default-border-style);
    }
    
    @each $breakpoint in map-keys($breakpoints) {
        @include breakpoint-up($breakpoint) {
            $mod: breakpoint-modifier($breakpoint, $breakpoints);

            &.tabs--horizontal#{$mod} {
                display: flex;
                flex-direction: row;
                align-items: baseline;

                > li {
                    flex: 1;
                    text-align: center;
                }

                > li > button[aria-selected="true"] {
                    padding-top: 1em;
                    border-color: inherit !important;
                }
            }
        }
    }
}