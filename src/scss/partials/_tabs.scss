/*

In this file:

// A. Variables
// B. Tabs
// D. Nav Divider
// E. Dropdown

*/

////////////////////////////////////////
// A. Variables
////////////////////////////////////////

:root {

    --tab-padding-x: 1em;
    --tab-padding-y: 0.5em;

    --accent-bar-size: calc(var(--default-border-width) * 2);
    --accent-bar-opacity: 1;
}

////////////////////////////////////////
// B. Data Tab Group
////////////////////////////////////////

[data-tab-group] {
    &[class*="bc-"] {
        > .tabs--span > li > button::after {
            display: none;
        }
    }
}

////////////////////////////////////////
// C. Tabs Class
////////////////////////////////////////

.tabs {
    @extend %list-no-style;
    position: relative;

    > li > button {
        position: relative;
        padding: var(--tab-padding-y) var(--tab-padding-x);

        @extend .subtle-fill;
        --subtle-fill-opacity: 0.05;

        display: block;
        width: 100%;
        
        &::after {
            content: "";
            position: absolute;
            top: 0;
            right: 0;
            left: 0;
            height: var(--accent-bar-size);
            background-color: currentColor;
            opacity: 0.125;
        }
    }

    button[aria-selected="true"] {
        font-weight: var(--base-font-weight-bold);

        &::after {
            opacity: 1;
        }
    }
}

.tabs:not([class*="tabs--span"]) {

    &::before {
        content: "";
        position: absolute;
        top: 100%;
        right: 0;
        left: 0;
        height: var(--accent-bar-size);
        background-color: currentColor;
        opacity: 0.125;

        display: none;
    }

    > li{
        margin-bottom: var(--accent-bar-size);
    }

    > li > button {
        padding-bottom: calc( var(--tab-padding-y) + var(--accent-bar-size));

        &::after,
        &::before {
            display: none;
        }

        &::after {
            top: 100%;
        }
    }

    > li > button[aria-selected="true"] {
        &::after,
        &::before {
            display: block;
        }
    }

    @each $breakpoint in map-keys($breakpoints) {
        @include breakpoint-up($breakpoint) {
            $mod: breakpoint-modifier($breakpoint, $breakpoints);

            &.tabs--horizontal#{$mod} {
                display: flex;
                flex-direction: row;
                align-items: baseline;

                &::before {
                    display: block;
                }

                > li {
                    margin-bottom: 0;
                }
            }
        }
    }
}

.tabs--span {

    > li > button {
        padding-top: calc(var(--tab-padding-y) + var(--accent-bar-size));
    }

    > li > button[aria-selected="true"] {
        &::before {
            display: none;
        }
    }

    @each $breakpoint in map-keys($breakpoints) {
        @include breakpoint-up($breakpoint) {
            $mod: breakpoint-modifier($breakpoint, $breakpoints);

            &.tabs--horizontal#{$mod} {
                display: flex;
                flex-direction: row;
                align-items: baseline;

                >li {
                    flex: 1;
                    flex-basis: 0;
                }
            }
        }
    }
}