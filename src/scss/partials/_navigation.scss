/*

In this file:

// A. Variables
// B. Nav
// D. Nav Divider
// E. Dropdown

*/

////////////////////////////////////////
// A. Variables
////////////////////////////////////////

:root {
    --nav--divider-padding-x: 1em;
    --nav--divider-padding-y: 0.5em;
    --dropdown-z-index: 6000;
}

////////////////////////////////////////
// B. Nav
////////////////////////////////////////

.nav {
    --gap-size: var(--s2);
    
    @extend %list-no-style;

    > li {
        position: relative;
    }

    > li a[aria-current] {
        font-weight: var(--base-font-weight-bold);
        text-decoration: underline;
    }
}

.nav:not([class*="nav--divider"]) {

    > li:not(:last-child) {
        margin-bottom: calc(var(--gap-size) * .75);
    }

    > li > [data-toggle="dropdown"] ~ ul {
        padding: var(--gap-size);
        margin-left: calc(var(--gap-size) * -1);
        margin-right: calc(var(--gap-size) * -1);
        width: calc(100% + (var(--gap-size) * 2));
    }

    > li > [data-toggle="dropdown"][class*="-icon"] ~ ul {
        margin-left: calc( var(--gap-size) * -1);
        margin-right: 0;
        margin-top: 1rem;
        width: 240px;
    }

    @each $breakpoint in map-keys($breakpoints) {
        @include breakpoint-up($breakpoint) {
            $mod: breakpoint-modifier($breakpoint, $breakpoints);

            &.nav--horizontal#{$mod} {
                display: flex;
                flex-direction: row;
                align-items: center;
                margin-left: calc(-1 * var(--gap-size));
                margin-right: calc(-1 * var(--gap-size));

                > li {
                    margin-left: var(--gap-size);
                    margin-right: var(--gap-size);
                    margin-bottom: 0 !important;
                }

                > li > [data-toggle="dropdown"] ~ ul {
                    min-width: 200px;
                    position: absolute;
                    left: 0;
                }

                > li > [data-toggle="dropdown"][class*="-icon"] ~ ul {
                    left: 50%;
                    transform: translateX(-50%);
                    margin-left: 0;
                    &::after{
                        left: 50%;
                    }
                }
            }
        }
    }


}

@each $key, $value in $spacers {
    @if ($key != 2) {
        .nav--gap-#{$key} {
            --gap-size: #{$value};
        }
    }
}

////////////////////////////////////////
// D. Nav Divider
////////////////////////////////////////

.nav--divider {

    &:not([class*="bc-"]) {
        border-color: inherit;

        a, button {
            color: inherit;
        }
    }

    > li:not(:last-child) {
        border-bottom-width: var(--default-border-width);
        border-bottom-style: var(--default-border-style);
        border-bottom-color: inherit;
    }

    > li > a, 
    > li > button {
        display: block;
        width: 100%;
    }

    > li > a, 
    > li > button,
    > li > [data-toggle="dropdown"] ~ ul {
        padding: var(--nav--divider-padding-y) var(--nav--divider-padding-x);
    }

    > li > [data-toggle="dropdown"] ~ ul {
        border-top-width: 0 !important;
    }

    [data-toggle="dropdown"] {
        justify-content: space-between;
    }

    @each $breakpoint in map-keys($breakpoints) {
        @include breakpoint-up($breakpoint) {
            $mod: breakpoint-modifier($breakpoint, $breakpoints);

            &.nav--horizontal#{$mod} {
                display: flex;
                flex-direction: row;
                align-items: baseline;

                > li {
                    flex: 1;
                    text-align: center;
                    border-bottom-style: none !important; // Thanks, IE.

                    &:not(:last-child) {
                        border-right-width: var(--default-border-width);
                        border-right-style: var(--default-border-style);
                        border-color: inherit;
                    }
                }

                [data-toggle="dropdown"] {
                    justify-content: center;
                }

                &[class*="border"] {
                    > li > [data-toggle="dropdown"] ~ ul {
                        border-width: var(--default-border-width);
                        border-style: var(--default-border-style);
                        border-top-width: 0;
                        border-color: inherit;
                        width: calc(100% + (var(--default-border-width) * 2));
                    }
                }

                [data-toggle="dropdown"] ~ ul {
                    position: absolute;
                    width: 100%;
                    left: calc(var(--default-border-width) * -1);
                }
            }
        }
    }
}

////////////////////////////////////////
// E. Dropdown
////////////////////////////////////////

[data-toggle="dropdown"]:not([class*="btn--icon-only"]) {
    @include add-caret;

    &[aria-expanded="true"]::after {
        transform: rotate(180deg);
    }
}

[data-toggle="dropdown"][class*="-icon"] ~ ul {
    position: relative;
    --dropdown-pointer-size: 0.75rem;

    margin-top: 50px;
    overflow: visible;

    &::after {
        content: "";
        position: absolute;
        top: 0;
        left: calc(var(--gap-size) + var(--dropdown-pointer-size) + 4px);
        transform: translateX(-50%) rotate(45deg);

        width:  var(--dropdown-pointer-size);
        height:  var(--dropdown-pointer-size);
        margin-top: calc( var(--dropdown-pointer-size) * -0.5 - var(--default-border-width) );

        background-color: inherit;
        border-color: inherit;
        border-left-width: inherit;
        border-left-style: inherit;
        border-top-width: inherit;
        border-top-style: inherit;
    }
}

[data-toggle="dropdown"] ~ ul {
    --dropdown-link-margin: 0.5em;

    @extend %list-no-style;

    &:not([class*="fs-"]) {
        font-size: inherit;
    }

    font-weight: normal;
    position: static;
    top: 100%;
    width: 100%;

    z-index: var(--dropdown-z-index);
    text-align: left;

    > li {
        margin-left: 0;
        margin-right: 0;

        &:not(:last-child) {
            margin-bottom: var(--dropdown-link-margin);
        }
    }

    display: none;

    &.shown {
        display: block;
    }
}